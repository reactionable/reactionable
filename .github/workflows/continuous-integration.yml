name: Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - "**.md"
  workflow_dispatch:
    branches:
      - master

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5

      - name: ♻️ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: ♻️ Yarn packages cache
        id: yarn-cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ⚙️ Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 🏗️ Build
        run: yarn build

      - name: 👕 Lint
        run: yarn lint

      - name: ♻️ Get Jest cache dir
        id: jest-cache-dir-path
        run: |
          JEST_CACHE_DIR=$(yarn jest --showConfig | grep -oP '(?<="cacheDirectory": ")[^"]+(?=")')
          echo "::set-output name=dir::$JEST_CACHE_DIR"

      - name: ♻️ Test cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ${{ steps.jest-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-test-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-test-

      - name: 🧪 Test
        run: |
          yarn test:coverage &
          yarn storybook:build
        env:
          CI: true

      - name: 📊 Code coverage
        uses: codecov/codecov-action@v1

  publish:
    needs: continuous-integration
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          registry-url: https://registry.npmjs.org/

      - name: ♻️ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: ♻️ Yarn packages cache
        id: yarn-cache
        uses: actions/cache@v2.1.4
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: ⚙️ Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: 🏗️ Build
        run: yarn build:ci

      - name: 🔖 Configure publish
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          echo `git add -A && git commit -m "chore: prepare release"`

      - name: 🌐 Publish Storybook to gh-pages
        run: yarn storybook:deploy
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}

      - name: 📦 Publish NPM packages
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
        run: yarn lerna publish --conventional-commits --create-release github --yes
