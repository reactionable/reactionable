name: Publish

on:
  watch:
    types: [started]

jobs:
  authorize:
    runs-on: ubuntu-latest

    steps:
      - uses: octokit/request-action@v2.0.17
        id: get_latest_release
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ github.actor }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: [authorize]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.2
        with:
          registry-url: https://registry.npmjs.org/

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        run: yarn

      - name: Build
        run: yarn build

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo `git add -A && git commit -m "chore: prepare release"`

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NODE_AUTH_TOKEN}}
        run: yarn run publish

      - name: Generate doc
        run: |
          mkdir build
          yarn build:doc

      - name: Publish Storybook to gh-pages
        run: yarn storybook:deploy
        env:
          GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}
